"""Initial database setup with multi-business

Revision ID: 7504c727ca0c
Revises: 
Create Date: 2025-10-11 02:57:17.650842

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7504c727ca0c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('business',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('new_jar_price', sa.Float(), nullable=True),
    sa.Column('new_dispenser_price', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_business')),
    sa.UniqueConstraint('name', name=op.f('uq_business_name'))
    )
    op.create_table('customer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('mobile_number', sa.String(length=15), nullable=False),
    sa.Column('village', sa.String(length=100), nullable=True),
    sa.Column('area', sa.String(length=100), nullable=True),
    sa.Column('landmark', sa.String(length=200), nullable=True),
    sa.Column('daily_jars', sa.Integer(), nullable=True),
    sa.Column('price_per_jar', sa.Float(), nullable=False),
    sa.Column('business_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['business_id'], ['business.id'], name=op.f('fk_customer_business_id_business')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_customer')),
    sa.UniqueConstraint('mobile_number', 'business_id', name='uq_customer_mobile_business')
    )
    with op.batch_alter_table('customer', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_customer_mobile_number'), ['mobile_number'], unique=False)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('role', sa.String(length=10), nullable=True),
    sa.Column('daily_wage', sa.Float(), nullable=True),
    sa.Column('cash_balance', sa.Float(), nullable=True),
    sa.Column('business_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['business.id'], name=op.f('fk_user_business_id_business')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_role'), ['role'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('cash_handover',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['manager_id'], ['user.id'], name=op.f('fk_cash_handover_manager_id_user')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_cash_handover_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cash_handover'))
    )
    with op.batch_alter_table('cash_handover', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_cash_handover_timestamp'), ['timestamp'], unique=False)

    op.create_table('daily_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jars_delivered', sa.Integer(), nullable=False),
    sa.Column('amount_collected', sa.Float(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], name=op.f('fk_daily_log_customer_id_customer')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_daily_log_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_daily_log'))
    )
    with op.batch_alter_table('daily_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_daily_log_timestamp'), ['timestamp'], unique=False)

    op.create_table('expense',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_expense_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_expense'))
    )
    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_expense_timestamp'), ['timestamp'], unique=False)

    op.create_table('product_sale',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_name', sa.String(length=50), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price_per_item', sa.Float(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('customer_name', sa.String(length=120), nullable=True),
    sa.Column('customer_mobile', sa.String(length=15), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('business_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['business.id'], name=op.f('fk_product_sale_business_id_business')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_product_sale_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_sale'))
    )
    with op.batch_alter_table('product_sale', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_product_sale_timestamp'), ['timestamp'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('product_sale', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_product_sale_timestamp'))

    op.drop_table('product_sale')
    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_expense_timestamp'))

    op.drop_table('expense')
    with op.batch_alter_table('daily_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_daily_log_timestamp'))

    op.drop_table('daily_log')
    with op.batch_alter_table('cash_handover', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cash_handover_timestamp'))

    op.drop_table('cash_handover')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_role'))

    op.drop_table('user')
    with op.batch_alter_table('customer', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_customer_mobile_number'))

    op.drop_table('customer')
    op.drop_table('business')
    # ### end Alembic commands ###
