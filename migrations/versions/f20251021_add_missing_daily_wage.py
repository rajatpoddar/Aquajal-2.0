"""Add missing daily_wage column to User

Revision ID: f20251021_add_missing_daily_wage # Or your unique ID
Revises: d4733cfd73eb # Points to the previous 'house_number' migration
Create Date: 2025-10-21 15:40:00.000000 # Update date if needed

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f20251021_add_missing_daily_wage' # Match the filename/ID
down_revision = 'd4733cfd73eb'      # Should point to the 'house_number' migration
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Removing try/except to ensure the column is added or fails loudly.
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('daily_wage', sa.Float(), nullable=True))
    print("Attempted to add missing 'daily_wage' column.")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Added try/except here for safety during downgrade
    try:
        with op.batch_alter_table('user', schema=None) as batch_op:
            batch_op.drop_column('daily_wage')
    except Exception as e:
         print(f"Could not drop 'daily_wage': {e}")
         pass # Ignore error if column doesn't exist
    # ### end Alembic commands ###